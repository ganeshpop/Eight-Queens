board = [8x8]

def solveBoard(board):
    possibilities = computePossibilities(board)
    if isSolved(board):
        printBoard(board)
        return True
    else
        for loc in possibilities:
            if queenCount <= 8:
            place queen  at loc
            if solveBoard(board):
                printBoard(board)
                return True
            else
                cant place queen at loc
        return False

def placeNextQueen(board):
    if queenCount < 8:
    possibilities = computePossibilities(board)
        While possibilities are left 
            for i in possibilities:
                if placeNextQueen(i):
                    return True
                else 
                    print - cant place queen at i
            else
                return False
        
def computePossibilities(board):
    possibilities = []
    for i in range (8)
        for j in range (8)
            loc =(i,j)
            if queen in row:
                continue 
            else if queen in colum:
                continue
            else if queen in diagonal1:
                continue
            else if queen in diagonal2:
                continue
            else 
                possibilities.append(loc)
    return possibilities

def isSolved(board):
    if queenCount == 8:
        return True
    else 
        return False


8Queens(board,NoOfQueen):
    for j in 1 to 8:

is safe(board,loc)

is in board(row col):
 return row >=1 and row <=2 and col >=1 and col <=8  


incx[1,-1]
incy(1,-1)

for incx:
    for incy:
